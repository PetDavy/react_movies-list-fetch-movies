{"version":3,"sources":["components/MovieCard/MovieCard.js","components/shapes/MovieShape.js","components/MoviesList/MoviesList.js","components/Preview/Preview.js","components/Buttons/Buttons.js","components/InputField/InputField.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","PropTypes","string","isRequired","title","description","imgUrl","imdbId","className","src","alt","href","MoviesList","movies","map","movie","key","Preview","isLoading","defaultProps","Buttons","findMovie","type","onClick","InputField","value","error","handleChange","htmlFor","id","placeholder","classNames","onChange","API_URL","FindMovie","addMovie","useState","setValue","setMovie","setError","setIsLoading","a","fetch","response","json","foundMovie","Response","Error","formatMovie","message","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","find","oneMovie","target","App","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"4XAIaA,GCDJC,IAAUC,OAAOC,WACXF,IAAUC,OAAOC,WACtBF,IAAUC,OAAOC,WACjBF,IAAUC,OAAOC,W,YDFF,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,OAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aE9BKK,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAMR,QAAYQ,S,uBCJ3BE,G,YAAU,SAAC,GAAD,IAAGF,EAAH,EAAGA,MAAOG,EAAV,EAAUA,UAAV,OACrB,yBAAKV,UAAU,aACb,wBAAIA,UAAU,SAAd,WAEEU,GACE,yBAAKV,UAAU,gBACb,8BACA,8BACA,8BACA,+BAMHO,IAAUG,GACT,kBAAC,EAAcH,MAWvBE,EAAQE,aAAe,CACrBJ,MAAO,MC/BF,IAAMK,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACrB,yBAAKb,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEc,KAAK,SACLd,UAAU,kBACVe,QAASF,GAHX,iBASF,yBAAKb,UAAU,WACb,4BACEc,KAAK,SACLd,UAAU,qBAFZ,sB,gBCZOgB,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,aAAjB,OACxB,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,QAAQoB,QAAQ,eAAjC,eAIA,yBAAKpB,UAAU,WACb,2BACEc,KAAK,OACLO,GAAG,cACHC,YAAY,0BACZL,MAAOA,EACPjB,UAAWuB,IAAW,QAAS,CAC7B,YAAaL,IAEfM,SAAUL,KAKZD,GACE,uBAAGlB,UAAU,kBACVkB,KChBLO,EAAO,sDADD,WACC,OAEAC,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUtB,EAAa,EAAbA,OAAa,EACvBuB,mBAAS,IADc,mBAC1CX,EAD0C,KACnCY,EADmC,OAEvBD,mBAAS,MAFc,mBAE1CrB,EAF0C,KAEnCuB,EAFmC,OAGvBF,mBAAS,IAHc,mBAG1CV,EAH0C,KAGnCa,EAHmC,OAIfH,oBAAS,GAJM,mBAI1ClB,EAJ0C,KAI/BsB,EAJ+B,KAM3CnB,EAAS,uCAAG,8BAAAoB,EAAA,6DAChBD,GAAa,GADG,kBAISE,MAAMT,EAAUR,GAJzB,cAIRkB,EAJQ,gBAKWA,EAASC,OALpB,UAOc,WAFtBC,EALQ,QAOCC,SAPD,uBAQN,IAAIC,MAAJ,wCARM,QAWdT,EAASU,EAAYH,IACrBN,EAAS,IAZK,kDAcdD,EAAS,MACTC,EAAS,KAAMU,SAfD,QAkBhBT,GAAa,GAlBG,0DAAH,qDAqBTQ,EAAc,SAAAH,GAAU,MAAK,CACjCzC,MAAOyC,EAAWK,MAClB7C,YAAawC,EAAWM,KACxB7C,OAAQuC,EAAWO,OACnB7C,OAAQsC,EAAWQ,SA4BrB,OACE,oCACE,0BAAM7C,UAAU,aAAa8C,SAtBZ,SAACC,GACpBA,EAAMC,iBAEQ,OAAVzC,EAMAF,EAAO4C,MAAK,SAAAC,GAAQ,OAAIA,EAASnD,SAAWQ,EAAMR,UACpDgC,EAAS,iCAKXJ,EAASpB,GACTsB,EAAS,IACTC,EAAS,OAbPC,EAAS,6BAmBP,kBAAC,EAAD,CACEd,MAAOA,EACPC,MAAOA,EACPC,aA/Ba,SAAC4B,GACpBlB,EAASkB,EAAMI,OAAOlC,OACtBc,EAAS,OAgCL,kBAAC,EAAD,CAASlB,UAAWA,KAGtB,kBAAC,EAAD,CACEH,UAAWA,EACXH,MAAOA,MChFF6C,EAAM,WAAO,IAAD,EACKxB,mBAAS,IADd,mBAChBvB,EADgB,KACRgD,EADQ,KAOvB,OACE,yBAAKrD,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CACE2B,SAXS,SAACpB,GAChB8C,GAAU,SAAAC,GAAU,4BAAQA,GAAR,CAAoB/C,QAWlCF,OAAQA,OCflBkD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.931a8872.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbId,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbId}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbId: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const MovieShape = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbId: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieShape } from '../shapes/MovieShape';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape(MovieShape).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieShape } from '../shapes/MovieShape';\nimport { MovieCard } from '../MovieCard';\nimport './Prewiew.scss';\n\nexport const Preview = ({ movie, isLoading }) => (\n  <div className=\"container\">\n    <h2 className=\"title\">Preview</h2>\n    {\n      isLoading && (\n        <div className=\"lds-ellipsis\">\n          <div />\n          <div />\n          <div />\n          <div />\n        </div>\n      )\n    }\n\n    {\n      (movie && !isLoading) && (\n        <MovieCard {...movie} />\n      )\n    }\n  </div>\n);\n\nPreview.propTypes = {\n  movie: PropTypes.shape(MovieShape),\n  isLoading: PropTypes.bool.isRequired,\n};\n\nPreview.defaultProps = {\n  movie: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Buttons = ({ findMovie }) => (\n  <div className=\"field is-grouped\">\n    <div className=\"control\">\n      <button\n        type=\"button\"\n        className=\"button is-light\"\n        onClick={findMovie}\n      >\n        Find a movie\n      </button>\n    </div>\n\n    <div className=\"control\">\n      <button\n        type=\"submit\"\n        className=\"button is-primary\"\n      >\n        Add to the list\n      </button>\n    </div>\n  </div>\n);\n\nButtons.propTypes = {\n  findMovie: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const InputField = ({ value, error, handleChange }) => (\n  <div className=\"field\">\n    <label className=\"label\" htmlFor=\"movie-title\">\n      Movie title\n    </label>\n\n    <div className=\"control\">\n      <input\n        type=\"text\"\n        id=\"movie-title\"\n        placeholder=\"Enter a title to search\"\n        value={value}\n        className={classNames('input', {\n          'is-danger': error,\n        })}\n        onChange={handleChange}\n      />\n    </div>\n\n    {\n      error && (\n        <p className=\"help is-danger\">\n          {error}\n        </p>\n      )\n    }\n  </div>\n);\n\nInputField.propTypes = {\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport PropTypes from 'prop-types';\nimport { MovieShape } from '../shapes/MovieShape';\nimport { Preview } from '../Preview';\nimport { Buttons } from '../Buttons';\nimport { InputField } from '../InputField';\n\nconst KEY = '3e232a7e';\nconst API_URL = `https://www.omdbapi.com/?i=tt3896198&apikey=${KEY}&t=`;\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [value, setValue] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const findMovie = async() => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(API_URL + value);\n      const foundMovie = await response.json();\n\n      if (foundMovie.Response === 'False') {\n        throw new Error(`Can't find a movie with such a title`);\n      }\n\n      setMovie(formatMovie(foundMovie));\n      setError('');\n    } catch (Error) {\n      setMovie(null);\n      setError(Error.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  const formatMovie = foundMovie => ({\n    title: foundMovie.Title,\n    description: foundMovie.Plot,\n    imgUrl: foundMovie.Poster,\n    imdbId: foundMovie.imdbID,\n  });\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    setError('');\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (movie === null) {\n      setError('Please find movie first');\n\n      return;\n    }\n\n    if (movies.find(oneMovie => oneMovie.imdbId === movie.imdbId)) {\n      setError('Movie is already in the list');\n\n      return;\n    }\n\n    addMovie(movie);\n    setValue('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <InputField\n          value={value}\n          error={error}\n          handleChange={handleChange}\n        />\n\n        <Buttons findMovie={findMovie} />\n      </form>\n\n      <Preview\n        isLoading={isLoading}\n        movie={movie}\n      />\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape(MovieShape).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n\n  const addMovie = (movie) => {\n    setMovies(prevMovies => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}